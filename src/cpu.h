#include <stdint.h>


const int DISPLAY_HEIGHT = 32;
const int DISPLAY_WIDTH = 64;

class Chip8{
    private:
    uint16_t opcode;
    uint8_t memory[4096];
    uint8_t VN[16];
    uint16_t I;
    uint8_t delayTimer;
    uint8_t soundTimer;
    uint16_t programCounter;
    uint16_t stackPointer;
    uint32_t stack[16];
    uint8_t instructionPerCycle = 9;

    uint8_t chip8_fontset[80] =
    { 
    0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
    0x20, 0x60, 0x20, 0x20, 0x70, // 1
    0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
    0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
    0x90, 0x90, 0xF0, 0x10, 0x10, // 4
    0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
    0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
    0xF0, 0x10, 0x20, 0x40, 0x40, // 7
    0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
    0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
    0xF0, 0x90, 0xF0, 0x90, 0x90, // A
    0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
    0xF0, 0x80, 0x80, 0x80, 0xF0, // C
    0xE0, 0x90, 0x90, 0x90, 0xE0, // D
    0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
    0xF0, 0x80, 0xF0, 0x80, 0x80  // F
    };
    public:
    uint8_t keys[16];
    uint32_t display[DISPLAY_HEIGHT * DISPLAY_WIDTH];
    public:
    void init(const char* fileName);
    void loadRom(const char* fileName);
    void cycle();
    void execute();
};